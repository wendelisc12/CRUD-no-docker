/// <reference types="node" />
import type { EventEmitter } from "events";
import type { Request, Response, NextFunction } from "express";
declare module "express-serve-static-core" {
    interface Response {
        marko: typeof renderMarkoTemplate;
    }
}
declare module "express" {
    interface Response {
        marko: typeof renderMarkoTemplate;
    }
}
export default function middleware(): (req: Request, res: Response, next: NextFunction) => void;
declare function renderMarkoTemplate<I extends Record<string, unknown> & {
    $global?: Record<string, unknown>;
}, T extends {
    render(input: I, ...args: unknown[]): EventEmitter;
}>(this: Response, template: T, input?: I): void;
export {};
